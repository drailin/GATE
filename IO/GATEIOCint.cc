//
// File generated by rootcint at Mon Jan 19 20:14:56 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME GATEIOCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "GATEIOCint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace gate {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void gate_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("gate", 0 /*version*/, "./IWriter.h", 10,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &gate_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void gate_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOT {
   void gatecLcLIReader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_gatecLcLIReader(void *p);
   static void deleteArray_gatecLcLIReader(void *p);
   static void destruct_gatecLcLIReader(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::gate::IReader*)
   {
      ::gate::IReader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::gate::IReader >(0);
      static ::ROOT::TGenericClassInfo 
         instance("gate::IReader", ::gate::IReader::Class_Version(), "./IReader.h", 12,
                  typeid(::gate::IReader), DefineBehavior(ptr, ptr),
                  &::gate::IReader::Dictionary, isa_proxy, 4,
                  sizeof(::gate::IReader) );
      instance.SetDelete(&delete_gatecLcLIReader);
      instance.SetDeleteArray(&deleteArray_gatecLcLIReader);
      instance.SetDestructor(&destruct_gatecLcLIReader);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::gate::IReader*)
   {
      return GenerateInitInstanceLocal((::gate::IReader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::gate::IReader*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void gatecLcLIWriter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_gatecLcLIWriter(void *p);
   static void deleteArray_gatecLcLIWriter(void *p);
   static void destruct_gatecLcLIWriter(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::gate::IWriter*)
   {
      ::gate::IWriter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::gate::IWriter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("gate::IWriter", ::gate::IWriter::Class_Version(), "./IWriter.h", 12,
                  typeid(::gate::IWriter), DefineBehavior(ptr, ptr),
                  &::gate::IWriter::Dictionary, isa_proxy, 4,
                  sizeof(::gate::IWriter) );
      instance.SetDelete(&delete_gatecLcLIWriter);
      instance.SetDeleteArray(&deleteArray_gatecLcLIWriter);
      instance.SetDestructor(&destruct_gatecLcLIWriter);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::gate::IWriter*)
   {
      return GenerateInitInstanceLocal((::gate::IWriter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::gate::IWriter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

      namespace gate {
//______________________________________________________________________________
TClass *IReader::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *IReader::Class_Name()
{
   return "gate::IReader";
}

//______________________________________________________________________________
const char *IReader::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::gate::IReader*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int IReader::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::gate::IReader*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void IReader::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::gate::IReader*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *IReader::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::gate::IReader*)0x0)->GetClass();
   return fgIsA;
}

} // namespace gate
      namespace gate {
//______________________________________________________________________________
TClass *IWriter::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *IWriter::Class_Name()
{
   return "gate::IWriter";
}

//______________________________________________________________________________
const char *IWriter::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::gate::IWriter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int IWriter::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::gate::IWriter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void IWriter::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::gate::IWriter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *IWriter::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::gate::IWriter*)0x0)->GetClass();
   return fgIsA;
}

} // namespace gate
      namespace gate {
//______________________________________________________________________________
void IReader::Streamer(TBuffer &R__b)
{
   // Stream an object of class gate::IReader.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(gate::IReader::Class(),this);
   } else {
      R__b.WriteClassBuffer(gate::IReader::Class(),this);
   }
}

} // namespace gate
//______________________________________________________________________________
      namespace gate {
void IReader::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class gate::IReader.
      TClass *R__cl = ::gate::IReader::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isOpen_", &isOpen_);
}

} // namespace gate
namespace ROOT {
   // Wrapper around operator delete
   static void delete_gatecLcLIReader(void *p) {
      delete ((::gate::IReader*)p);
   }
   static void deleteArray_gatecLcLIReader(void *p) {
      delete [] ((::gate::IReader*)p);
   }
   static void destruct_gatecLcLIReader(void *p) {
      typedef ::gate::IReader current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::gate::IReader

      namespace gate {
//______________________________________________________________________________
void IWriter::Streamer(TBuffer &R__b)
{
   // Stream an object of class gate::IWriter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(gate::IWriter::Class(),this);
   } else {
      R__b.WriteClassBuffer(gate::IWriter::Class(),this);
   }
}

} // namespace gate
//______________________________________________________________________________
      namespace gate {
void IWriter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class gate::IWriter.
      TClass *R__cl = ::gate::IWriter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isOpen_", &isOpen_);
}

} // namespace gate
namespace ROOT {
   // Wrapper around operator delete
   static void delete_gatecLcLIWriter(void *p) {
      delete ((::gate::IWriter*)p);
   }
   static void deleteArray_gatecLcLIWriter(void *p) {
      delete [] ((::gate::IWriter*)p);
   }
   static void destruct_gatecLcLIWriter(void *p) {
      typedef ::gate::IWriter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::gate::IWriter

/********************************************************
* GATEIOCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableGATEIOCint();

extern "C" void G__set_cpp_environmentGATEIOCint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("IReader.h");
  G__add_compiledheader("IWriter.h");
  G__cpp_reset_tagtableGATEIOCint();
}
#include <new>
extern "C" int G__cpp_dllrevGATEIOCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* gate */

/* gate::IReader */
static int G__GATEIOCint_261_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const gate::IReader*) G__getstructoffset())->isOpen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEIOCint_261_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gate::IReader*) G__getstructoffset())->open(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEIOCint_261_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const gate::Event& obj = ((gate::IReader*) G__getstructoffset())->read_event((size_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEIOCint_261_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gate::IReader*) G__getstructoffset())->close();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEIOCint_261_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((gate::IReader*) G__getstructoffset())->eof((size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEIOCint_261_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((gate::IReader*) G__getstructoffset())->max_events());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEIOCint_261_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((gate::IReader*) G__getstructoffset())->max_runs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEIOCint_261_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((gate::IReader*) G__getstructoffset())->max_dsts());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEIOCint_261_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gate::IReader*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEIOCint_261_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) gate::IReader::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEIOCint_261_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) gate::IReader::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEIOCint_261_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) gate::IReader::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEIOCint_261_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      gate::IReader::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEIOCint_261_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const gate::IReader*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEIOCint_261_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gate::IReader*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEIOCint_261_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gate::IReader*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEIOCint_261_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gate::IReader*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEIOCint_261_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) gate::IReader::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEIOCint_261_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) gate::IReader::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEIOCint_261_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) gate::IReader::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEIOCint_261_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) gate::IReader::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef gate::IReader G__TgatecLcLIReader;
static int G__GATEIOCint_261_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (gate::IReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((gate::IReader*) (soff+(sizeof(gate::IReader)*i)))->~G__TgatecLcLIReader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (gate::IReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((gate::IReader*) (soff))->~G__TgatecLcLIReader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__GATEIOCint_261_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   gate::IReader* dest = (gate::IReader*) G__getstructoffset();
   *dest = *(gate::IReader*) libp->para[0].ref;
   const gate::IReader& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* gate::IWriter */
static int G__GATEIOCint_262_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const gate::IWriter*) G__getstructoffset())->isOpen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEIOCint_262_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gate::IWriter*) G__getstructoffset())->write(*(gate::Event*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEIOCint_262_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((gate::IWriter*) G__getstructoffset())->open(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((gate::IWriter*) G__getstructoffset())->open(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEIOCint_262_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gate::IWriter*) G__getstructoffset())->close();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEIOCint_262_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) gate::IWriter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEIOCint_262_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) gate::IWriter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEIOCint_262_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) gate::IWriter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEIOCint_262_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      gate::IWriter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEIOCint_262_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const gate::IWriter*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEIOCint_262_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gate::IWriter*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEIOCint_262_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gate::IWriter*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEIOCint_262_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gate::IWriter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEIOCint_262_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) gate::IWriter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEIOCint_262_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) gate::IWriter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEIOCint_262_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) gate::IWriter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEIOCint_262_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) gate::IWriter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef gate::IWriter G__TgatecLcLIWriter;
static int G__GATEIOCint_262_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (gate::IWriter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((gate::IWriter*) (soff+(sizeof(gate::IWriter)*i)))->~G__TgatecLcLIWriter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (gate::IWriter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((gate::IWriter*) (soff))->~G__TgatecLcLIWriter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__GATEIOCint_262_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   gate::IWriter* dest = (gate::IWriter*) G__getstructoffset();
   *dest = *(gate::IWriter*) libp->para[0].ref;
   const gate::IWriter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* gate */

/* gate::IReader */

/* gate::IWriter */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncGATEIOCint {
 public:
  G__Sizep2memfuncGATEIOCint(): p(&G__Sizep2memfuncGATEIOCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncGATEIOCint::*p)();
};

size_t G__get_sizep2memfuncGATEIOCint()
{
  G__Sizep2memfuncGATEIOCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceGATEIOCint() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableGATEIOCint() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__GATEIOCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GATEIOCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GATEIOCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GATEIOCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GATEIOCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__GATEIOCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GATEIOCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GATEIOCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GATEIOCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GATEIOCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__GATEIOCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__GATEIOCintLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GATEIOCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GATEIOCintLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GATEIOCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GATEIOCintLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__GATEIOCintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__GATEIOCintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* gate */
static void G__setup_memvargate(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GATEIOCintLN_gate));
   {
   }
   G__tag_memvar_reset();
}


   /* gate::IReader */
static void G__setup_memvargatecLcLIReader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GATEIOCintLN_gatecLcLIReader));
   { gate::IReader *p; p=(gate::IReader*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"isOpen_=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GATEIOCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* gate::IWriter */
static void G__setup_memvargatecLcLIWriter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GATEIOCintLN_gatecLcLIWriter));
   { gate::IWriter *p; p=(gate::IWriter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"isOpen_=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GATEIOCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarGATEIOCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncgate(void) {
   /* gate */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GATEIOCintLN_gate));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgatecLcLIReader(void) {
   /* gate::IReader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GATEIOCintLN_gatecLcLIReader));
   G__memfunc_setup("isOpen",622,G__GATEIOCint_261_0_2, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("open",434,G__GATEIOCint_261_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("read_event",1053,G__GATEIOCint_261_0_4, 117, G__get_linked_tagnum(&G__GATEIOCintLN_gatecLcLEvent), -1, 1, 1, 1, 1, 0, "k - 'size_t' 0 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("close",534,G__GATEIOCint_261_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("eof",314,G__GATEIOCint_261_0_6, 103, -1, -1, 0, 1, 1, 1, 0, "k - 'size_t' 0 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("max_events",1082,G__GATEIOCint_261_0_7, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("max_runs",877,G__GATEIOCint_261_0_8, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("max_dsts",867,G__GATEIOCint_261_0_9, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("print",557,G__GATEIOCint_261_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__GATEIOCint_261_0_11, 85, G__get_linked_tagnum(&G__GATEIOCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&gate::IReader::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GATEIOCint_261_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&gate::IReader::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GATEIOCint_261_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&gate::IReader::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GATEIOCint_261_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&gate::IReader::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__GATEIOCint_261_0_15, 85, G__get_linked_tagnum(&G__GATEIOCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__GATEIOCint_261_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__GATEIOCint_261_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GATEIOCint_261_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GATEIOCint_261_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&gate::IReader::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GATEIOCint_261_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&gate::IReader::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GATEIOCint_261_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&gate::IReader::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GATEIOCint_261_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&gate::IReader::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~IReader", 794, G__GATEIOCint_261_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__GATEIOCint_261_0_24, (int) ('u'), G__get_linked_tagnum(&G__GATEIOCintLN_gatecLcLIReader), -1, 1, 1, 1, 1, 0, "u 'gate::IReader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgatecLcLIWriter(void) {
   /* gate::IWriter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GATEIOCintLN_gatecLcLIWriter));
   G__memfunc_setup("isOpen",622,G__GATEIOCint_262_0_2, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("write",555,G__GATEIOCint_262_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'gate::Event' - 1 - evt", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("open",434,G__GATEIOCint_262_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - - u 'string' - 0 '\"\"' opt", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("close",534,G__GATEIOCint_262_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__GATEIOCint_262_0_6, 85, G__get_linked_tagnum(&G__GATEIOCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&gate::IWriter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GATEIOCint_262_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&gate::IWriter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GATEIOCint_262_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&gate::IWriter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GATEIOCint_262_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&gate::IWriter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__GATEIOCint_262_0_10, 85, G__get_linked_tagnum(&G__GATEIOCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__GATEIOCint_262_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__GATEIOCint_262_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GATEIOCint_262_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GATEIOCint_262_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&gate::IWriter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GATEIOCint_262_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&gate::IWriter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GATEIOCint_262_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&gate::IWriter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GATEIOCint_262_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&gate::IWriter::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~IWriter", 836, G__GATEIOCint_262_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__GATEIOCint_262_0_19, (int) ('u'), G__get_linked_tagnum(&G__GATEIOCintLN_gatecLcLIWriter), -1, 1, 1, 1, 1, 0, "u 'gate::IWriter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncGATEIOCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalGATEIOCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcGATEIOCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__GATEIOCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__GATEIOCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__GATEIOCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__GATEIOCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__GATEIOCintLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__GATEIOCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__GATEIOCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GATEIOCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__GATEIOCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GATEIOCintLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__GATEIOCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GATEIOCintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__GATEIOCintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__GATEIOCintLN_gate = { "gate" , 110 , -1 };
G__linked_taginfo G__GATEIOCintLN_gatecLcLEvent = { "gate::Event" , 99 , -1 };
G__linked_taginfo G__GATEIOCintLN_gatecLcLIReader = { "gate::IReader" , 99 , -1 };
G__linked_taginfo G__GATEIOCintLN_gatecLcLIWriter = { "gate::IWriter" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableGATEIOCint() {
  G__GATEIOCintLN_TClass.tagnum = -1 ;
  G__GATEIOCintLN_TBuffer.tagnum = -1 ;
  G__GATEIOCintLN_TMemberInspector.tagnum = -1 ;
  G__GATEIOCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__GATEIOCintLN_string.tagnum = -1 ;
  G__GATEIOCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__GATEIOCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GATEIOCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__GATEIOCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GATEIOCintLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__GATEIOCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GATEIOCintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__GATEIOCintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__GATEIOCintLN_gate.tagnum = -1 ;
  G__GATEIOCintLN_gatecLcLEvent.tagnum = -1 ;
  G__GATEIOCintLN_gatecLcLIReader.tagnum = -1 ;
  G__GATEIOCintLN_gatecLcLIWriter.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableGATEIOCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__GATEIOCintLN_TClass);
   G__get_linked_tagnum_fwd(&G__GATEIOCintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__GATEIOCintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__GATEIOCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__GATEIOCintLN_string);
   G__get_linked_tagnum_fwd(&G__GATEIOCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__GATEIOCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GATEIOCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__GATEIOCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GATEIOCintLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__GATEIOCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GATEIOCintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GATEIOCintLN_TVectorTlEdoublegR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GATEIOCintLN_gate),0,-1,0,(char*)NULL,G__setup_memvargate,G__setup_memfuncgate);
   G__get_linked_tagnum_fwd(&G__GATEIOCintLN_gatecLcLEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GATEIOCintLN_gatecLcLIReader),sizeof(gate::IReader),-1,263432,(char*)NULL,G__setup_memvargatecLcLIReader,G__setup_memfuncgatecLcLIReader);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GATEIOCintLN_gatecLcLIWriter),sizeof(gate::IWriter),-1,263427,(char*)NULL,G__setup_memvargatecLcLIWriter,G__setup_memfuncgatecLcLIWriter);
}
extern "C" void G__cpp_setupGATEIOCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupGATEIOCint()");
  G__set_cpp_environmentGATEIOCint();
  G__cpp_setup_tagtableGATEIOCint();

  G__cpp_setup_inheritanceGATEIOCint();

  G__cpp_setup_typetableGATEIOCint();

  G__cpp_setup_memvarGATEIOCint();

  G__cpp_setup_memfuncGATEIOCint();
  G__cpp_setup_globalGATEIOCint();
  G__cpp_setup_funcGATEIOCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncGATEIOCint();
  return;
}
class G__cpp_setup_initGATEIOCint {
  public:
    G__cpp_setup_initGATEIOCint() { G__add_setup_func("GATEIOCint",(G__incsetup)(&G__cpp_setupGATEIOCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initGATEIOCint() { G__remove_setup_func("GATEIOCint"); }
};
G__cpp_setup_initGATEIOCint G__cpp_setup_initializerGATEIOCint;

