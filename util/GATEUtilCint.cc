//
// File generated by rootcint at Mon Jan 19 20:14:59 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME GATEUtilCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "GATEUtilCint.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void gatecLcLParamStore_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_gatecLcLParamStore(void *p = 0);
   static void *newArray_gatecLcLParamStore(Long_t size, void *p);
   static void delete_gatecLcLParamStore(void *p);
   static void deleteArray_gatecLcLParamStore(void *p);
   static void destruct_gatecLcLParamStore(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::gate::ParamStore*)
   {
      ::gate::ParamStore *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::gate::ParamStore >(0);
      static ::ROOT::TGenericClassInfo 
         instance("gate::ParamStore", ::gate::ParamStore::Class_Version(), "./ParamStore.h", 23,
                  typeid(::gate::ParamStore), DefineBehavior(ptr, ptr),
                  &::gate::ParamStore::Dictionary, isa_proxy, 4,
                  sizeof(::gate::ParamStore) );
      instance.SetNew(&new_gatecLcLParamStore);
      instance.SetNewArray(&newArray_gatecLcLParamStore);
      instance.SetDelete(&delete_gatecLcLParamStore);
      instance.SetDeleteArray(&deleteArray_gatecLcLParamStore);
      instance.SetDestructor(&destruct_gatecLcLParamStore);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::gate::ParamStore*)
   {
      return GenerateInitInstanceLocal((::gate::ParamStore*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::gate::ParamStore*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

      namespace gate {
//______________________________________________________________________________
TClass *ParamStore::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ParamStore::Class_Name()
{
   return "gate::ParamStore";
}

//______________________________________________________________________________
const char *ParamStore::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::gate::ParamStore*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ParamStore::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::gate::ParamStore*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ParamStore::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::gate::ParamStore*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ParamStore::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::gate::ParamStore*)0x0)->GetClass();
   return fgIsA;
}

} // namespace gate
      namespace gate {
//______________________________________________________________________________
void ParamStore::Streamer(TBuffer &R__b)
{
   // Stream an object of class gate::ParamStore.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(gate::ParamStore::Class(),this);
   } else {
      R__b.WriteClassBuffer(gate::ParamStore::Class(),this);
   }
}

} // namespace gate
//______________________________________________________________________________
      namespace gate {
void ParamStore::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class gate::ParamStore.
      TClass *R__cl = ::gate::ParamStore::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStoreName", (void*)&fStoreName);
      R__insp.InspectMember("string", (void*)&fStoreName, "fStoreName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dstore_", (void*)&dstore_);
      R__insp.InspectMember("map<std::string,double>", (void*)&dstore_, "dstore_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "istore_", (void*)&istore_);
      R__insp.InspectMember("map<std::string,int>", (void*)&istore_, "istore_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sstore_", (void*)&sstore_);
      R__insp.InspectMember("map<std::string,std::string>", (void*)&sstore_, "sstore_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dvstore_", (void*)&dvstore_);
      R__insp.InspectMember("map<std::string,vdouble>", (void*)&dvstore_, "dvstore_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ivstore_", (void*)&ivstore_);
      R__insp.InspectMember("map<std::string,vint>", (void*)&ivstore_, "ivstore_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "svstore_", (void*)&svstore_);
      R__insp.InspectMember("map<std::string,vstring>", (void*)&svstore_, "svstore_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tstore_", (void*)&tstore_);
      R__insp.InspectMember("map<std::string,TObject*>", (void*)&tstore_, "tstore_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tvstore_", (void*)&tvstore_);
      R__insp.InspectMember("map<std::string,vtobject>", (void*)&tvstore_, "tvstore_.", false);
}

} // namespace gate
namespace ROOT {
   // Wrappers around operator new
   static void *new_gatecLcLParamStore(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::gate::ParamStore : new ::gate::ParamStore;
   }
   static void *newArray_gatecLcLParamStore(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::gate::ParamStore[nElements] : new ::gate::ParamStore[nElements];
   }
   // Wrapper around operator delete
   static void delete_gatecLcLParamStore(void *p) {
      delete ((::gate::ParamStore*)p);
   }
   static void deleteArray_gatecLcLParamStore(void *p) {
      delete [] ((::gate::ParamStore*)p);
   }
   static void destruct_gatecLcLParamStore(void *p) {
      typedef ::gate::ParamStore current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::gate::ParamStore

namespace ROOT {
   void maplEstringcOTObjectmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOTObjectmUgR_Dictionary();
   static void *new_maplEstringcOTObjectmUgR(void *p = 0);
   static void *newArray_maplEstringcOTObjectmUgR(Long_t size, void *p);
   static void delete_maplEstringcOTObjectmUgR(void *p);
   static void deleteArray_maplEstringcOTObjectmUgR(void *p);
   static void destruct_maplEstringcOTObjectmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,TObject*>*)
   {
      map<string,TObject*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,TObject*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,TObject*>", -2, "prec_stl/map", 63,
                  typeid(map<string,TObject*>), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOTObjectmUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,TObject*>) );
      instance.SetNew(&new_maplEstringcOTObjectmUgR);
      instance.SetNewArray(&newArray_maplEstringcOTObjectmUgR);
      instance.SetDelete(&delete_maplEstringcOTObjectmUgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOTObjectmUgR);
      instance.SetDestructor(&destruct_maplEstringcOTObjectmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,TObject*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,TObject*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOTObjectmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,TObject*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOTObjectmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,TObject*> : new map<string,TObject*>;
   }
   static void *newArray_maplEstringcOTObjectmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,TObject*>[nElements] : new map<string,TObject*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOTObjectmUgR(void *p) {
      delete ((map<string,TObject*>*)p);
   }
   static void deleteArray_maplEstringcOTObjectmUgR(void *p) {
      delete [] ((map<string,TObject*>*)p);
   }
   static void destruct_maplEstringcOTObjectmUgR(void *p) {
      typedef map<string,TObject*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,TObject*>

namespace ROOT {
   void maplEstringcOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOdoublegR_Dictionary();
   static void *new_maplEstringcOdoublegR(void *p = 0);
   static void *newArray_maplEstringcOdoublegR(Long_t size, void *p);
   static void delete_maplEstringcOdoublegR(void *p);
   static void deleteArray_maplEstringcOdoublegR(void *p);
   static void destruct_maplEstringcOdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,double>*)
   {
      map<string,double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,double>", -2, "map.dll", 0,
                  typeid(map<string,double>), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,double>) );
      instance.SetNew(&new_maplEstringcOdoublegR);
      instance.SetNewArray(&newArray_maplEstringcOdoublegR);
      instance.SetDelete(&delete_maplEstringcOdoublegR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOdoublegR);
      instance.SetDestructor(&destruct_maplEstringcOdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,double> : new map<string,double>;
   }
   static void *newArray_maplEstringcOdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,double>[nElements] : new map<string,double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOdoublegR(void *p) {
      delete ((map<string,double>*)p);
   }
   static void deleteArray_maplEstringcOdoublegR(void *p) {
      delete [] ((map<string,double>*)p);
   }
   static void destruct_maplEstringcOdoublegR(void *p) {
      typedef map<string,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,double>

namespace ROOT {
   void maplEstringcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOintgR_Dictionary();
   static void *new_maplEstringcOintgR(void *p = 0);
   static void *newArray_maplEstringcOintgR(Long_t size, void *p);
   static void delete_maplEstringcOintgR(void *p);
   static void deleteArray_maplEstringcOintgR(void *p);
   static void destruct_maplEstringcOintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,int>*)
   {
      map<string,int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,int>", -2, "map.dll", 0,
                  typeid(map<string,int>), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOintgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,int>) );
      instance.SetNew(&new_maplEstringcOintgR);
      instance.SetNewArray(&newArray_maplEstringcOintgR);
      instance.SetDelete(&delete_maplEstringcOintgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOintgR);
      instance.SetDestructor(&destruct_maplEstringcOintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,int> : new map<string,int>;
   }
   static void *newArray_maplEstringcOintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,int>[nElements] : new map<string,int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOintgR(void *p) {
      delete ((map<string,int>*)p);
   }
   static void deleteArray_maplEstringcOintgR(void *p) {
      delete [] ((map<string,int>*)p);
   }
   static void destruct_maplEstringcOintgR(void *p) {
      typedef map<string,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,int>

namespace ROOT {
   void maplEstringcOstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOstringgR_Dictionary();
   static void *new_maplEstringcOstringgR(void *p = 0);
   static void *newArray_maplEstringcOstringgR(Long_t size, void *p);
   static void delete_maplEstringcOstringgR(void *p);
   static void deleteArray_maplEstringcOstringgR(void *p);
   static void destruct_maplEstringcOstringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,string>*)
   {
      map<string,string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,string>", -2, "prec_stl/map", 63,
                  typeid(map<string,string>), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOstringgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,string>) );
      instance.SetNew(&new_maplEstringcOstringgR);
      instance.SetNewArray(&newArray_maplEstringcOstringgR);
      instance.SetDelete(&delete_maplEstringcOstringgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOstringgR);
      instance.SetDestructor(&destruct_maplEstringcOstringgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOstringgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,string>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,string> : new map<string,string>;
   }
   static void *newArray_maplEstringcOstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,string>[nElements] : new map<string,string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOstringgR(void *p) {
      delete ((map<string,string>*)p);
   }
   static void deleteArray_maplEstringcOstringgR(void *p) {
      delete [] ((map<string,string>*)p);
   }
   static void destruct_maplEstringcOstringgR(void *p) {
      typedef map<string,string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,string>

namespace ROOT {
   void maplEstringcOvectorlETObjectmUgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOvectorlETObjectmUgRsPgR_Dictionary();
   static void *new_maplEstringcOvectorlETObjectmUgRsPgR(void *p = 0);
   static void *newArray_maplEstringcOvectorlETObjectmUgRsPgR(Long_t size, void *p);
   static void delete_maplEstringcOvectorlETObjectmUgRsPgR(void *p);
   static void deleteArray_maplEstringcOvectorlETObjectmUgRsPgR(void *p);
   static void destruct_maplEstringcOvectorlETObjectmUgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,vector<TObject*> >*)
   {
      map<string,vector<TObject*> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,vector<TObject*> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,vector<TObject*> >", -2, "prec_stl/map", 63,
                  typeid(map<string,vector<TObject*> >), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOvectorlETObjectmUgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,vector<TObject*> >) );
      instance.SetNew(&new_maplEstringcOvectorlETObjectmUgRsPgR);
      instance.SetNewArray(&newArray_maplEstringcOvectorlETObjectmUgRsPgR);
      instance.SetDelete(&delete_maplEstringcOvectorlETObjectmUgRsPgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOvectorlETObjectmUgRsPgR);
      instance.SetDestructor(&destruct_maplEstringcOvectorlETObjectmUgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,vector<TObject*> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,vector<TObject*> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOvectorlETObjectmUgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,vector<TObject*> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOvectorlETObjectmUgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,vector<TObject*> > : new map<string,vector<TObject*> >;
   }
   static void *newArray_maplEstringcOvectorlETObjectmUgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,vector<TObject*> >[nElements] : new map<string,vector<TObject*> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOvectorlETObjectmUgRsPgR(void *p) {
      delete ((map<string,vector<TObject*> >*)p);
   }
   static void deleteArray_maplEstringcOvectorlETObjectmUgRsPgR(void *p) {
      delete [] ((map<string,vector<TObject*> >*)p);
   }
   static void destruct_maplEstringcOvectorlETObjectmUgRsPgR(void *p) {
      typedef map<string,vector<TObject*> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,vector<TObject*> >

namespace ROOT {
   void maplEstringcOvectorlEdoublegRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOvectorlEdoublegRsPgR_Dictionary();
   static void *new_maplEstringcOvectorlEdoublegRsPgR(void *p = 0);
   static void *newArray_maplEstringcOvectorlEdoublegRsPgR(Long_t size, void *p);
   static void delete_maplEstringcOvectorlEdoublegRsPgR(void *p);
   static void deleteArray_maplEstringcOvectorlEdoublegRsPgR(void *p);
   static void destruct_maplEstringcOvectorlEdoublegRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,vector<double> >*)
   {
      map<string,vector<double> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,vector<double> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,vector<double> >", -2, "prec_stl/map", 63,
                  typeid(map<string,vector<double> >), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOvectorlEdoublegRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,vector<double> >) );
      instance.SetNew(&new_maplEstringcOvectorlEdoublegRsPgR);
      instance.SetNewArray(&newArray_maplEstringcOvectorlEdoublegRsPgR);
      instance.SetDelete(&delete_maplEstringcOvectorlEdoublegRsPgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOvectorlEdoublegRsPgR);
      instance.SetDestructor(&destruct_maplEstringcOvectorlEdoublegRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,vector<double> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,vector<double> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOvectorlEdoublegRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,vector<double> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOvectorlEdoublegRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,vector<double> > : new map<string,vector<double> >;
   }
   static void *newArray_maplEstringcOvectorlEdoublegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,vector<double> >[nElements] : new map<string,vector<double> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOvectorlEdoublegRsPgR(void *p) {
      delete ((map<string,vector<double> >*)p);
   }
   static void deleteArray_maplEstringcOvectorlEdoublegRsPgR(void *p) {
      delete [] ((map<string,vector<double> >*)p);
   }
   static void destruct_maplEstringcOvectorlEdoublegRsPgR(void *p) {
      typedef map<string,vector<double> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,vector<double> >

namespace ROOT {
   void maplEstringcOvectorlEintgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOvectorlEintgRsPgR_Dictionary();
   static void *new_maplEstringcOvectorlEintgRsPgR(void *p = 0);
   static void *newArray_maplEstringcOvectorlEintgRsPgR(Long_t size, void *p);
   static void delete_maplEstringcOvectorlEintgRsPgR(void *p);
   static void deleteArray_maplEstringcOvectorlEintgRsPgR(void *p);
   static void destruct_maplEstringcOvectorlEintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,vector<int> >*)
   {
      map<string,vector<int> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,vector<int> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,vector<int> >", -2, "prec_stl/map", 63,
                  typeid(map<string,vector<int> >), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOvectorlEintgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,vector<int> >) );
      instance.SetNew(&new_maplEstringcOvectorlEintgRsPgR);
      instance.SetNewArray(&newArray_maplEstringcOvectorlEintgRsPgR);
      instance.SetDelete(&delete_maplEstringcOvectorlEintgRsPgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOvectorlEintgRsPgR);
      instance.SetDestructor(&destruct_maplEstringcOvectorlEintgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,vector<int> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,vector<int> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOvectorlEintgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,vector<int> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOvectorlEintgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,vector<int> > : new map<string,vector<int> >;
   }
   static void *newArray_maplEstringcOvectorlEintgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,vector<int> >[nElements] : new map<string,vector<int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOvectorlEintgRsPgR(void *p) {
      delete ((map<string,vector<int> >*)p);
   }
   static void deleteArray_maplEstringcOvectorlEintgRsPgR(void *p) {
      delete [] ((map<string,vector<int> >*)p);
   }
   static void destruct_maplEstringcOvectorlEintgRsPgR(void *p) {
      typedef map<string,vector<int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,vector<int> >

namespace ROOT {
   void maplEstringcOvectorlEstringgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOvectorlEstringgRsPgR_Dictionary();
   static void *new_maplEstringcOvectorlEstringgRsPgR(void *p = 0);
   static void *newArray_maplEstringcOvectorlEstringgRsPgR(Long_t size, void *p);
   static void delete_maplEstringcOvectorlEstringgRsPgR(void *p);
   static void deleteArray_maplEstringcOvectorlEstringgRsPgR(void *p);
   static void destruct_maplEstringcOvectorlEstringgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,vector<string> >*)
   {
      map<string,vector<string> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,vector<string> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,vector<string> >", -2, "prec_stl/map", 63,
                  typeid(map<string,vector<string> >), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOvectorlEstringgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,vector<string> >) );
      instance.SetNew(&new_maplEstringcOvectorlEstringgRsPgR);
      instance.SetNewArray(&newArray_maplEstringcOvectorlEstringgRsPgR);
      instance.SetDelete(&delete_maplEstringcOvectorlEstringgRsPgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOvectorlEstringgRsPgR);
      instance.SetDestructor(&destruct_maplEstringcOvectorlEstringgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,vector<string> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,vector<string> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOvectorlEstringgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,vector<string> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOvectorlEstringgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,vector<string> > : new map<string,vector<string> >;
   }
   static void *newArray_maplEstringcOvectorlEstringgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,vector<string> >[nElements] : new map<string,vector<string> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOvectorlEstringgRsPgR(void *p) {
      delete ((map<string,vector<string> >*)p);
   }
   static void deleteArray_maplEstringcOvectorlEstringgRsPgR(void *p) {
      delete [] ((map<string,vector<string> >*)p);
   }
   static void destruct_maplEstringcOvectorlEstringgRsPgR(void *p) {
      typedef map<string,vector<string> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,vector<string> >

namespace ROOT {
   void vectorlETObjectmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETObjectmUgR_Dictionary();
   static void *new_vectorlETObjectmUgR(void *p = 0);
   static void *newArray_vectorlETObjectmUgR(Long_t size, void *p);
   static void delete_vectorlETObjectmUgR(void *p);
   static void deleteArray_vectorlETObjectmUgR(void *p);
   static void destruct_vectorlETObjectmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TObject*>*)
   {
      vector<TObject*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TObject*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TObject*>", -2, "prec_stl/vector", 49,
                  typeid(vector<TObject*>), DefineBehavior(ptr, ptr),
                  0, &vectorlETObjectmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TObject*>) );
      instance.SetNew(&new_vectorlETObjectmUgR);
      instance.SetNewArray(&newArray_vectorlETObjectmUgR);
      instance.SetDelete(&delete_vectorlETObjectmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlETObjectmUgR);
      instance.SetDestructor(&destruct_vectorlETObjectmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TObject*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TObject*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETObjectmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TObject*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETObjectmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TObject*> : new vector<TObject*>;
   }
   static void *newArray_vectorlETObjectmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TObject*>[nElements] : new vector<TObject*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETObjectmUgR(void *p) {
      delete ((vector<TObject*>*)p);
   }
   static void deleteArray_vectorlETObjectmUgR(void *p) {
      delete [] ((vector<TObject*>*)p);
   }
   static void destruct_vectorlETObjectmUgR(void *p) {
      typedef vector<TObject*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TObject*>

namespace ROOT {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<double>

namespace ROOT {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<int>

namespace ROOT {
   void vectorlEstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEstringgR_Dictionary();
   static void *new_vectorlEstringgR(void *p = 0);
   static void *newArray_vectorlEstringgR(Long_t size, void *p);
   static void delete_vectorlEstringgR(void *p);
   static void deleteArray_vectorlEstringgR(void *p);
   static void destruct_vectorlEstringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<string>*)
   {
      vector<string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<string>", -2, "prec_stl/vector", 49,
                  typeid(vector<string>), DefineBehavior(ptr, ptr),
                  0, &vectorlEstringgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<string>) );
      instance.SetNew(&new_vectorlEstringgR);
      instance.SetNewArray(&newArray_vectorlEstringgR);
      instance.SetDelete(&delete_vectorlEstringgR);
      instance.SetDeleteArray(&deleteArray_vectorlEstringgR);
      instance.SetDestructor(&destruct_vectorlEstringgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEstringgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<string>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string> : new vector<string>;
   }
   static void *newArray_vectorlEstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string>[nElements] : new vector<string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEstringgR(void *p) {
      delete ((vector<string>*)p);
   }
   static void deleteArray_vectorlEstringgR(void *p) {
      delete [] ((vector<string>*)p);
   }
   static void destruct_vectorlEstringgR(void *p) {
      typedef vector<string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<string>

/********************************************************
* GATEUtilCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableGATEUtilCint();

extern "C" void G__set_cpp_environmentGATEUtilCint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("ParamStore.h");
  G__cpp_reset_tagtableGATEUtilCint();
}
#include <new>
extern "C" int G__cpp_dllrevGATEUtilCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* gate::ParamStore */
static int G__GATEUtilCint_475_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   gate::ParamStore* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new gate::ParamStore(*((string*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) gate::ParamStore(*((string*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new gate::ParamStore[n];
       } else {
         p = new((void*) gvp) gate::ParamStore[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new gate::ParamStore;
       } else {
         p = new((void*) gvp) gate::ParamStore;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GATEUtilCintLN_gatecLcLParamStore));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((gate::ParamStore*) G__getstructoffset())->store(*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((gate::ParamStore*) G__getstructoffset())->store(*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((gate::ParamStore*) G__getstructoffset())->store(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((gate::ParamStore*) G__getstructoffset())->store(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((gate::ParamStore*) G__getstructoffset())->store(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((gate::ParamStore*) G__getstructoffset())->store(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((gate::ParamStore*) G__getstructoffset())->store(*((string*) G__int(libp->para[0])), *(vdouble*) libp->para[1].ref
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((gate::ParamStore*) G__getstructoffset())->store(*((string*) G__int(libp->para[0])), *(vdouble*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((gate::ParamStore*) G__getstructoffset())->store(*((string*) G__int(libp->para[0])), *(vstring*) libp->para[1].ref
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((gate::ParamStore*) G__getstructoffset())->store(*((string*) G__int(libp->para[0])), *(vstring*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((gate::ParamStore*) G__getstructoffset())->store(*((string*) G__int(libp->para[0])), *(vint*) libp->para[1].ref
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((gate::ParamStore*) G__getstructoffset())->store(*((string*) G__int(libp->para[0])), *(vint*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((gate::ParamStore*) G__getstructoffset())->store(*((string*) G__int(libp->para[0])), (TObject*) G__int(libp->para[1])
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((gate::ParamStore*) G__getstructoffset())->store(*((string*) G__int(libp->para[0])), (TObject*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((gate::ParamStore*) G__getstructoffset())->store(*((string*) G__int(libp->para[0])), *(vtobject*) libp->para[1].ref
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((gate::ParamStore*) G__getstructoffset())->store(*((string*) G__int(libp->para[0])), *(vtobject*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const gate::ParamStore*) G__getstructoffset())->size_dstore());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const gate::ParamStore*) G__getstructoffset())->size_istore());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const gate::ParamStore*) G__getstructoffset())->size_sstore());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const gate::ParamStore*) G__getstructoffset())->size_dvstore());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const gate::ParamStore*) G__getstructoffset())->size_svstore());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const gate::ParamStore*) G__getstructoffset())->size_ivstore());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const gate::ParamStore*) G__getstructoffset())->size_tstore());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const gate::ParamStore*) G__getstructoffset())->size_tvstore());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const gate::ParamStore*) G__getstructoffset())->find_dstore(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const gate::ParamStore*) G__getstructoffset())->find_istore(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const gate::ParamStore*) G__getstructoffset())->find_sstore(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const gate::ParamStore*) G__getstructoffset())->find_dvstore(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const gate::ParamStore*) G__getstructoffset())->find_ivstore(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const gate::ParamStore*) G__getstructoffset())->find_svstore(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const gate::ParamStore*) G__getstructoffset())->find_tstore(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const gate::ParamStore*) G__getstructoffset())->find_tvstore(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const gate::ParamStore*) G__getstructoffset())->find(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((gate::ParamStore*) G__getstructoffset())->fetch_dstore(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((gate::ParamStore*) G__getstructoffset())->fetch_istore(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((gate::ParamStore*) G__getstructoffset())->fetch_sstore(*((string*) G__int(libp->para[0])));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vdouble& obj = ((gate::ParamStore*) G__getstructoffset())->fetch_dvstore(*((string*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vstring& obj = ((gate::ParamStore*) G__getstructoffset())->fetch_svstore(*((string*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vint& obj = ((gate::ParamStore*) G__getstructoffset())->fetch_ivstore(*((string*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((gate::ParamStore*) G__getstructoffset())->fetch_tstore(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vtobject& obj = ((gate::ParamStore*) G__getstructoffset())->fetch_tvstore(*((string*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((gate::ParamStore*) G__getstructoffset())->erase_dstore(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((gate::ParamStore*) G__getstructoffset())->erase_istore(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((gate::ParamStore*) G__getstructoffset())->erase_sstore(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((gate::ParamStore*) G__getstructoffset())->erase_dvstore(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((gate::ParamStore*) G__getstructoffset())->erase_svstore(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((gate::ParamStore*) G__getstructoffset())->erase_ivstore(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((gate::ParamStore*) G__getstructoffset())->erase_tstore(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((gate::ParamStore*) G__getstructoffset())->erase_tvstore(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<std::string,std::string>& obj = ((const gate::ParamStore*) G__getstructoffset())->sstore_map();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<std::string,int>& obj = ((const gate::ParamStore*) G__getstructoffset())->istore_map();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<std::string,double>& obj = ((const gate::ParamStore*) G__getstructoffset())->dstore_map();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<std::string,vstring>& obj = ((const gate::ParamStore*) G__getstructoffset())->svstore_map();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<std::string,vint>& obj = ((const gate::ParamStore*) G__getstructoffset())->ivstore_map();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<std::string,vdouble>& obj = ((const gate::ParamStore*) G__getstructoffset())->dvstore_map();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<std::string,TObject*>& obj = ((const gate::ParamStore*) G__getstructoffset())->tstore_map();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<std::string,vtobject>& obj = ((const gate::ParamStore*) G__getstructoffset())->tvstore_map();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gate::ParamStore*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const gate::ParamStore*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((gate::ParamStore*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) gate::ParamStore::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) gate::ParamStore::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) gate::ParamStore::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      gate::ParamStore::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const gate::ParamStore*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gate::ParamStore*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gate::ParamStore*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gate::ParamStore*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) gate::ParamStore::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) gate::ParamStore::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) gate::ParamStore::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GATEUtilCint_475_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) gate::ParamStore::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__GATEUtilCint_475_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   gate::ParamStore* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new gate::ParamStore(*(gate::ParamStore*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GATEUtilCintLN_gatecLcLParamStore));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef gate::ParamStore G__TgatecLcLParamStore;
static int G__GATEUtilCint_475_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (gate::ParamStore*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((gate::ParamStore*) (soff+(sizeof(gate::ParamStore)*i)))->~G__TgatecLcLParamStore();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (gate::ParamStore*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((gate::ParamStore*) (soff))->~G__TgatecLcLParamStore();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__GATEUtilCint_475_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   gate::ParamStore* dest = (gate::ParamStore*) G__getstructoffset();
   *dest = *(gate::ParamStore*) libp->para[0].ref;
   const gate::ParamStore& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* gate::ParamStore */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncGATEUtilCint {
 public:
  G__Sizep2memfuncGATEUtilCint(): p(&G__Sizep2memfuncGATEUtilCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncGATEUtilCint::*p)();
};

size_t G__get_sizep2memfuncGATEUtilCint()
{
  G__Sizep2memfuncGATEUtilCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceGATEUtilCint() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableGATEUtilCint() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GATEUtilCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GATEUtilCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GATEUtilCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GATEUtilCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GATEUtilCintLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GATEUtilCintLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vdouble",117,G__get_linked_tagnum(&G__GATEUtilCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GATEUtilCintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GATEUtilCintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vint",117,G__get_linked_tagnum(&G__GATEUtilCintLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GATEUtilCintLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GATEUtilCintLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vstring",117,G__get_linked_tagnum(&G__GATEUtilCintLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TObject*>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_vectorlETObjectmUcOallocatorlETObjectmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_reverse_iteratorlEvectorlETObjectmUcOallocatorlETObjectmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GATEUtilCintLN_vectorlETObjectmUcOallocatorlETObjectmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_reverse_iteratorlEvectorlETObjectmUcOallocatorlETObjectmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GATEUtilCintLN_vectorlETObjectmUcOallocatorlETObjectmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vtobject",117,G__get_linked_tagnum(&G__GATEUtilCintLN_vectorlETObjectmUcOallocatorlETObjectmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,double>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,double>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,int>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,int>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::string>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::string>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string,less<string> >",117,G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,vdouble>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vdouble>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<double,allocator<double> > >",117,G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<double,allocator<double> >,less<string> >",117,G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,vint>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vint>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<int,allocator<int> > >",117,G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<int,allocator<int> >,less<string> >",117,G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,vstring>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vstring>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<string,allocator<string> > >",117,G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<string,allocator<string> >,less<string> >",117,G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObject*>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOTObjectmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjectmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObject*>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOTObjectmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjectmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObject*>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOTObjectmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjectmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObject*,less<string> >",117,G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOTObjectmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjectmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,vtobject>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOvectorlETObjectmUcOallocatorlETObjectmUgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlETObjectmUcOallocatorlETObjectmUgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vtobject>",117,G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOvectorlETObjectmUcOallocatorlETObjectmUgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlETObjectmUcOallocatorlETObjectmUgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<TObject*,allocator<TObject*> > >",117,G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOvectorlETObjectmUcOallocatorlETObjectmUgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlETObjectmUcOallocatorlETObjectmUgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<TObject*,allocator<TObject*> >,less<string> >",117,G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOvectorlETObjectmUcOallocatorlETObjectmUgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlETObjectmUcOallocatorlETObjectmUgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* gate::ParamStore */
static void G__setup_memvargatecLcLParamStore(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GATEUtilCintLN_gatecLcLParamStore));
   { gate::ParamStore *p; p=(gate::ParamStore*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__GATEUtilCintLN_string),-1,-1,4,"fStoreName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),G__defined_typename("map<std::string,double>"),-1,2,"dstore_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),G__defined_typename("map<std::string,int>"),-1,2,"istore_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),G__defined_typename("map<std::string,std::string>"),-1,2,"sstore_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),G__defined_typename("map<std::string,vdouble>"),-1,2,"dvstore_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),G__defined_typename("map<std::string,vint>"),-1,2,"ivstore_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR),G__defined_typename("map<std::string,vstring>"),-1,2,"svstore_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOTObjectmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjectmUgRsPgRsPgR),G__defined_typename("map<std::string,TObject*>"),-1,2,"tstore_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOvectorlETObjectmUcOallocatorlETObjectmUgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlETObjectmUcOallocatorlETObjectmUgRsPgRsPgRsPgRsPgR),G__defined_typename("map<std::string,vtobject>"),-1,2,"tvstore_=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GATEUtilCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarGATEUtilCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncgatecLcLParamStore(void) {
   /* gate::ParamStore */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GATEUtilCintLN_gatecLcLParamStore));
   G__memfunc_setup("ParamStore",1022,G__GATEUtilCint_475_0_1, 105, G__get_linked_tagnum(&G__GATEUtilCintLN_gatecLcLParamStore), -1, 0, 1, 1, 1, 0, "u 'string' - 0 '\"ParamStore\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("store",557,G__GATEUtilCint_475_0_2, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - name d - - 0 - val "
"g - - 0 'false' force", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("store",557,G__GATEUtilCint_475_0_3, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - name i - - 0 - val "
"g - - 0 'false' force", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("store",557,G__GATEUtilCint_475_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - name u 'string' - 0 - val "
"g - - 0 'false' force", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("store",557,G__GATEUtilCint_475_0_5, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - name u 'vector<double,allocator<double> >' 'vdouble' 1 - val "
"g - - 0 'false' force", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("store",557,G__GATEUtilCint_475_0_6, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - name u 'vector<string,allocator<string> >' 'vstring' 1 - val "
"g - - 0 'false' force", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("store",557,G__GATEUtilCint_475_0_7, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - name u 'vector<int,allocator<int> >' 'vint' 1 - val "
"g - - 0 'false' force", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("store",557,G__GATEUtilCint_475_0_8, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - name U 'TObject' - 0 - val "
"g - - 0 'false' force", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("store",557,G__GATEUtilCint_475_0_9, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - name u 'vector<TObject*,allocator<TObject*> >' 'vtobject' 1 - val "
"g - - 0 'false' force", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size_dstore",1195,G__GATEUtilCint_475_0_10, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size_istore",1200,G__GATEUtilCint_475_0_11, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size_sstore",1210,G__GATEUtilCint_475_0_12, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size_dvstore",1313,G__GATEUtilCint_475_0_13, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size_svstore",1328,G__GATEUtilCint_475_0_14, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size_ivstore",1318,G__GATEUtilCint_475_0_15, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size_tstore",1211,G__GATEUtilCint_475_0_16, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size_tvstore",1329,G__GATEUtilCint_475_0_17, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find_dstore",1169,G__GATEUtilCint_475_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find_istore",1174,G__GATEUtilCint_475_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find_sstore",1184,G__GATEUtilCint_475_0_20, 103, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find_dvstore",1287,G__GATEUtilCint_475_0_21, 103, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find_ivstore",1292,G__GATEUtilCint_475_0_22, 103, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find_svstore",1302,G__GATEUtilCint_475_0_23, 103, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find_tstore",1185,G__GATEUtilCint_475_0_24, 103, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find_tvstore",1303,G__GATEUtilCint_475_0_25, 103, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__GATEUtilCint_475_0_26, 105, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fetch_dstore",1274,G__GATEUtilCint_475_0_27, 100, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fetch_istore",1279,G__GATEUtilCint_475_0_28, 105, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fetch_sstore",1289,G__GATEUtilCint_475_0_29, 117, G__get_linked_tagnum(&G__GATEUtilCintLN_string), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fetch_dvstore",1392,G__GATEUtilCint_475_0_30, 117, G__get_linked_tagnum(&G__GATEUtilCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vdouble"), 1, 1, 1, 1, 1, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fetch_svstore",1407,G__GATEUtilCint_475_0_31, 117, G__get_linked_tagnum(&G__GATEUtilCintLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vstring"), 1, 1, 1, 1, 1, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fetch_ivstore",1397,G__GATEUtilCint_475_0_32, 117, G__get_linked_tagnum(&G__GATEUtilCintLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vint"), 1, 1, 1, 1, 1, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fetch_tstore",1290,G__GATEUtilCint_475_0_33, 85, G__get_linked_tagnum(&G__GATEUtilCintLN_TObject), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fetch_tvstore",1408,G__GATEUtilCint_475_0_34, 117, G__get_linked_tagnum(&G__GATEUtilCintLN_vectorlETObjectmUcOallocatorlETObjectmUgRsPgR), G__defined_typename("vtobject"), 1, 1, 1, 1, 1, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase_dstore",1280,G__GATEUtilCint_475_0_35, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase_istore",1285,G__GATEUtilCint_475_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase_sstore",1295,G__GATEUtilCint_475_0_37, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase_dvstore",1398,G__GATEUtilCint_475_0_38, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase_svstore",1413,G__GATEUtilCint_475_0_39, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase_ivstore",1403,G__GATEUtilCint_475_0_40, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase_tstore",1296,G__GATEUtilCint_475_0_41, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase_tvstore",1414,G__GATEUtilCint_475_0_42, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sstore_map",1085,G__GATEUtilCint_475_0_43, 117, G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR), G__defined_typename("map<std::string,std::string>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("istore_map",1075,G__GATEUtilCint_475_0_44, 117, G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR), G__defined_typename("map<std::string,int>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dstore_map",1070,G__GATEUtilCint_475_0_45, 117, G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR), G__defined_typename("map<std::string,double>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("svstore_map",1203,G__GATEUtilCint_475_0_46, 117, G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR), G__defined_typename("map<std::string,vstring>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ivstore_map",1193,G__GATEUtilCint_475_0_47, 117, G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR), G__defined_typename("map<std::string,vint>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dvstore_map",1188,G__GATEUtilCint_475_0_48, 117, G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR), G__defined_typename("map<std::string,vdouble>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tstore_map",1086,G__GATEUtilCint_475_0_49, 117, G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOTObjectmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjectmUgRsPgRsPgR), G__defined_typename("map<std::string,TObject*>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tvstore_map",1204,G__GATEUtilCint_475_0_50, 117, G__get_linked_tagnum(&G__GATEUtilCintLN_maplEstringcOvectorlETObjectmUcOallocatorlETObjectmUgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlETObjectmUcOallocatorlETObjectmUgRsPgRsPgRsPgRsPgR), G__defined_typename("map<std::string,vtobject>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__GATEUtilCint_475_0_51, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__GATEUtilCint_475_0_52, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__GATEUtilCint_475_0_53, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__GATEUtilCint_475_0_54, 85, G__get_linked_tagnum(&G__GATEUtilCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&gate::ParamStore::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GATEUtilCint_475_0_55, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&gate::ParamStore::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GATEUtilCint_475_0_56, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&gate::ParamStore::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GATEUtilCint_475_0_57, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&gate::ParamStore::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__GATEUtilCint_475_0_58, 85, G__get_linked_tagnum(&G__GATEUtilCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__GATEUtilCint_475_0_59, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__GATEUtilCint_475_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GATEUtilCint_475_0_61, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GATEUtilCint_475_0_62, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&gate::ParamStore::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GATEUtilCint_475_0_63, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&gate::ParamStore::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GATEUtilCint_475_0_64, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&gate::ParamStore::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GATEUtilCint_475_0_65, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&gate::ParamStore::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ParamStore", 1022, G__GATEUtilCint_475_0_66, (int) ('i'), G__get_linked_tagnum(&G__GATEUtilCintLN_gatecLcLParamStore), -1, 0, 1, 1, 1, 0, "u 'gate::ParamStore' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ParamStore", 1148, G__GATEUtilCint_475_0_67, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__GATEUtilCint_475_0_68, (int) ('u'), G__get_linked_tagnum(&G__GATEUtilCintLN_gatecLcLParamStore), -1, 1, 1, 1, 1, 0, "u 'gate::ParamStore' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncGATEUtilCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalGATEUtilCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcGATEUtilCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__GATEUtilCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__GATEUtilCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__GATEUtilCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__GATEUtilCintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__GATEUtilCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__GATEUtilCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__GATEUtilCintLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__GATEUtilCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__GATEUtilCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GATEUtilCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__GATEUtilCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GATEUtilCintLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__GATEUtilCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GATEUtilCintLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR = { "map<string,int,less<string>,allocator<pair<const string,int> > >" , 99 , -1 };
G__linked_taginfo G__GATEUtilCintLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR = { "map<string,double,less<string>,allocator<pair<const string,double> > >" , 99 , -1 };
G__linked_taginfo G__GATEUtilCintLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__GATEUtilCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GATEUtilCintLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__GATEUtilCintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GATEUtilCintLN_vectorlETObjectmUcOallocatorlETObjectmUgRsPgR = { "vector<TObject*,allocator<TObject*> >" , 99 , -1 };
G__linked_taginfo G__GATEUtilCintLN_reverse_iteratorlEvectorlETObjectmUcOallocatorlETObjectmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TObject*,allocator<TObject*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GATEUtilCintLN_gate = { "gate" , 110 , -1 };
G__linked_taginfo G__GATEUtilCintLN_gatecLcLParamStore = { "gate::ParamStore" , 99 , -1 };
G__linked_taginfo G__GATEUtilCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR = { "map<string,string,less<string>,allocator<pair<const string,string> > >" , 99 , -1 };
G__linked_taginfo G__GATEUtilCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR = { "map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >" , 99 , -1 };
G__linked_taginfo G__GATEUtilCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR = { "map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >" , 99 , -1 };
G__linked_taginfo G__GATEUtilCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR = { "map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >" , 99 , -1 };
G__linked_taginfo G__GATEUtilCintLN_maplEstringcOTObjectmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjectmUgRsPgRsPgR = { "map<string,TObject*,less<string>,allocator<pair<const string,TObject*> > >" , 99 , -1 };
G__linked_taginfo G__GATEUtilCintLN_maplEstringcOvectorlETObjectmUcOallocatorlETObjectmUgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlETObjectmUcOallocatorlETObjectmUgRsPgRsPgRsPgRsPgR = { "map<string,vector<TObject*,allocator<TObject*> >,less<string>,allocator<pair<const string,vector<TObject*,allocator<TObject*> > > > >" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableGATEUtilCint() {
  G__GATEUtilCintLN_TClass.tagnum = -1 ;
  G__GATEUtilCintLN_TBuffer.tagnum = -1 ;
  G__GATEUtilCintLN_TMemberInspector.tagnum = -1 ;
  G__GATEUtilCintLN_TObject.tagnum = -1 ;
  G__GATEUtilCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__GATEUtilCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__GATEUtilCintLN_string.tagnum = -1 ;
  G__GATEUtilCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__GATEUtilCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GATEUtilCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__GATEUtilCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GATEUtilCintLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__GATEUtilCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GATEUtilCintLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR.tagnum = -1 ;
  G__GATEUtilCintLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR.tagnum = -1 ;
  G__GATEUtilCintLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__GATEUtilCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GATEUtilCintLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__GATEUtilCintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GATEUtilCintLN_vectorlETObjectmUcOallocatorlETObjectmUgRsPgR.tagnum = -1 ;
  G__GATEUtilCintLN_reverse_iteratorlEvectorlETObjectmUcOallocatorlETObjectmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GATEUtilCintLN_gate.tagnum = -1 ;
  G__GATEUtilCintLN_gatecLcLParamStore.tagnum = -1 ;
  G__GATEUtilCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR.tagnum = -1 ;
  G__GATEUtilCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__GATEUtilCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__GATEUtilCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__GATEUtilCintLN_maplEstringcOTObjectmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjectmUgRsPgRsPgR.tagnum = -1 ;
  G__GATEUtilCintLN_maplEstringcOvectorlETObjectmUcOallocatorlETObjectmUgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlETObjectmUcOallocatorlETObjectmUgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableGATEUtilCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__GATEUtilCintLN_TClass);
   G__get_linked_tagnum_fwd(&G__GATEUtilCintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__GATEUtilCintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__GATEUtilCintLN_TObject);
   G__get_linked_tagnum_fwd(&G__GATEUtilCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__GATEUtilCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__GATEUtilCintLN_string);
   G__get_linked_tagnum_fwd(&G__GATEUtilCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__GATEUtilCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GATEUtilCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__GATEUtilCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GATEUtilCintLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__GATEUtilCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GATEUtilCintLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__GATEUtilCintLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__GATEUtilCintLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__GATEUtilCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GATEUtilCintLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__GATEUtilCintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GATEUtilCintLN_vectorlETObjectmUcOallocatorlETObjectmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__GATEUtilCintLN_reverse_iteratorlEvectorlETObjectmUcOallocatorlETObjectmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GATEUtilCintLN_gate);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GATEUtilCintLN_gatecLcLParamStore),sizeof(gate::ParamStore),-1,263424,(char*)NULL,G__setup_memvargatecLcLParamStore,G__setup_memfuncgatecLcLParamStore);
   G__get_linked_tagnum_fwd(&G__GATEUtilCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__GATEUtilCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__GATEUtilCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__GATEUtilCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__GATEUtilCintLN_maplEstringcOTObjectmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjectmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__GATEUtilCintLN_maplEstringcOvectorlETObjectmUcOallocatorlETObjectmUgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlETObjectmUcOallocatorlETObjectmUgRsPgRsPgRsPgRsPgR);
}
extern "C" void G__cpp_setupGATEUtilCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupGATEUtilCint()");
  G__set_cpp_environmentGATEUtilCint();
  G__cpp_setup_tagtableGATEUtilCint();

  G__cpp_setup_inheritanceGATEUtilCint();

  G__cpp_setup_typetableGATEUtilCint();

  G__cpp_setup_memvarGATEUtilCint();

  G__cpp_setup_memfuncGATEUtilCint();
  G__cpp_setup_globalGATEUtilCint();
  G__cpp_setup_funcGATEUtilCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncGATEUtilCint();
  return;
}
class G__cpp_setup_initGATEUtilCint {
  public:
    G__cpp_setup_initGATEUtilCint() { G__add_setup_func("GATEUtilCint",(G__incsetup)(&G__cpp_setupGATEUtilCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initGATEUtilCint() { G__remove_setup_func("GATEUtilCint"); }
};
G__cpp_setup_initGATEUtilCint G__cpp_setup_initializerGATEUtilCint;

